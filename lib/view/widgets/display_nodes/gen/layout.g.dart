/// ===================================================
/// Power By 张风捷特烈 --- Generated file. Do not edit.
/// github: https://github.com/toly1994328
/// ===================================================

part of 'node.g.dart';

Map<String, dynamic> get _layoutData => {"LayoutDemo1":{"title":"基础布局","desc":"通过基础的 24 分栏，迅速简便地创建布局。","code":"assets/code_res/layout_demo1.txt"},"LayoutDemo10":{"title":"响应式边距","desc":"通过 Padding\$ 让边距根据屏幕尺寸变化","code":"assets/code_res/layout_demo10.txt"},"LayoutDemo2":{"title":"混合布局","desc":"通过基础的 1/24 分栏任意扩展组合形成较为复杂的混合布局。","code":"assets/code_res/layout_demo2.txt"},"LayoutDemo3":{"title":"响应式布局","desc":"参照了 Bootstrap 的 响应式设计，预设了五个响应尺阶：xs、sm、md、lg 和 xl。支持响应式的参数都可以感知尺阶设置数值，比如 span 跨度、gutter 间距等。","code":"assets/code_res/layout_demo3.txt"},"LayoutDemo4":{"title":"Row\$：间隔与边距","desc":"提供 gutter 属性来指水平方向单元格间距；\n'\r\n      '单元格跨度总数超出 24，会自动换行，提供 verticalGutter 属性来指定列竖直方向间距；\n'\r\n      'padding 属性可以设计响应式的内边距；\n'\r\n      '这三个属性都支持 Rx 响应式变化。\n","code":"assets/code_res/layout_demo4.txt"},"LayoutDemo5":{"title":"Row\$：水平对齐","desc":"在水平方向上，单元格有六种对齐方式，通过 justify 参数配置。它具有六种元素，下图自上而下依次是 start、end、center、spaceBetween、spaceAround、spaceEvenly: ","code":"assets/code_res/layout_demo5.txt"},"LayoutDemo6":{"title":"Row\$：竖直对齐","desc":"在竖直方向上，单元格有三种对齐方式，通过 align 参数配置。下图自上而下依次是 top、bottom、middle：","code":"assets/code_res/layout_demo6.txt"},"LayoutDemo7":{"title":"Cell: 列偏移","desc":"Cell#offset 可以指定分栏偏移的栏数，该属性支持 Rx 响应式变化。","code":"assets/code_res/layout_demo7.txt"},"LayoutDemo8":{"title":"Cell: 列平移","desc":"pull 和 push 仅对对单元格进行平移，并不占据栅格空间。push 向右移动指定格数；pull 向左移动指定格数。","code":"assets/code_res/layout_demo8.txt"},"LayoutDemo9":{"title":"响应式尺寸盒","desc":"通过 SizedBox\$ 设置具有响应式的尺寸盒","code":"assets/code_res/layout_demo9.txt"}};